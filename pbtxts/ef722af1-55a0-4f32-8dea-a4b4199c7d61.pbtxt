# The recommended video for this pipeline is car_singapore.

control_port: 51881
graph_input: "graph_input1"
graph_output: "graph_output1"

node {
  name: "demux"
  calculator: "stream_demux"
  graph_input: "graph_input1"
  output_stream: "packet_stream_demux"
  output_stream: "video_stream_info_demux"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
      demux: {
        rtsp_transport: "tcp"  
        iframe_extract: false
        auto_reconnect: true
      }
    }
  }
}

node {
  name: "decode"
  calculator: "v205_dec"
  vendor: "Aupera"
  input_stream: "packet_stream_demux"
  input_stream: "video_stream_info_demux"
  output_stream: "image_stream_decode"
  output_stream: "video_stream_info_decode"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
      dec: {
        ow: 1920
        oh: 1080
        opixfmt: PIXFMT_BGR24
        queue_size: 12
        low_latency: false
      }
    }
  }
}

node {
  name: "detector"
  calculator: "box_detector"
  input_stream: "image_stream_decode"
  output_stream: "detection_stream"
  output_stream: "detect_interval_side_packet"
  ml_model_kernel_name: "RESNET18SSD_ITER140000_4CAR_CLEAN_20211020_v205_vitis2_5"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxDetectorOptions]: {
      detect_interval: 1
      detector_type: "SSD"
      need_preprocess: true
      log_performance: false
      run_on_letterboxed_img: false
      detection_threads: 1
      batch_size: 1
      force_batch_size: false
      batch_collection_timeout_ms: 0
      return_frames_inorder: true
      ignore_black_frames: false
      max_detection_lib_q_size: 30
      label_confidence: {
        label: 1
        confidence: 0.4
      }
      label_confidence: {
        label: 2
        confidence: 0.9
      }
      inter_class_nms: {
        threshold: 0.4
        labels: [1, 2]
      } 
      roi: {
        point: {
          x: 0
          y: 0
        }
        point: {
          x: 1920
          y: 0
        }
        point: {
          x: 1920
          y: 1080
        }
        point: {
          x: 0
          y: 1080
        }
      }
    }
  }
}

node {
  name: "tracker"
  calculator: "box_tracker"
  input_stream: "detection_stream"
  input_stream: "detect_interval_side_packet"
  output_stream: "tracks_stream"
  node_options: {
    [type.googleapis.com/aup.avaf.BoxTrackerOptions]: {
      max_keep_alive: 15
      min_hits: 1
      affinity_threshold: 0.1 
      shape_weight: 1
      position_weight: 1
      appearance_weight: 1
      shape_dist_max: 1
      position_dist_max: 1
      use_exp_cost: true
      tracker_type: "DEEPSORT"
      min_object_area_th: 20000
    }
  }
}

node {
  name: "vehicle_reid"
  calculator: "apl_vehicle_reid"
  input_stream: "tracks_stream"
  input_stream: "image_stream_decode"
  input_stream: "video_stream_info_demux"
  input_stream: "detect_interval_side_packet"
  output_stream: "lpr_notification"
  output_stream: "imgStream1080p_aplOut"
  stream_sync: {
    drop_strategy: DROP_INCOMPLETE_PACKETS
    timeout_ms: 5000
  }
  node_options: {
    [type.googleapis.com/aup.avaf.AplVehicleReIDOptions]: {
      common_fields: {
        notification_port: 19999
        max_file_cache: 100
        max_cluster_size: 100
        debug: true
        draw: true
        # use the same rois as the detection_roi
        roi: {
          point: {
            x: 0
            y: 0
          }
          point: {
            x: 1920
            y: 0
          }
          point: {
            x: 1920
            y: 1080
          }
          point: {
            x: 0
            y: 1080
          }
        }
      }
      # general fields
      clean_plot: false
      save_gallery: false
      # plate_lib configs
      traffic_vehicle_plate_vehicle_rotation: 0
      traffic_plate_confidence_threshold: 0.1
      traffic_plate_area_threshold: 700
      traffic_vehicle_plate_detector_from_xilinx: false
      traffic_vehicle_plate_recognizer_from_xilinx: false
      traffic_vehicle_plate_detector_skip: false
      traffic_plate_checksum_verification: true
      traffic_plate_run_preprocessing: false
      # General LPR pipeline-related configs  
      traffic_plate_min_history: 5
      traffic_vehicle_plate_update_with_area: false
      traffic_verified_plate_selction_criteria: "mode"
      traffic_plate_update_threshold: 8
      traffic_get_attributes: true
      # Vehicle detection-related configs
      traffic_class_min_history: 10
      # Tracking-related configs
      object_movement_iou_threshold: 0.8
      # Notification-related configs
      traffic_parking_alert_alarm_time_in_sec: 30.0
      traffic_parking_zone_notify_time_in_sec: 0.0
      tracklet_reporting_interval_in_sec: 150.0
      alarm_clear_frame_delay: 7
      # Halting related configs
      halting_alert_len_in_sec: 120.0
      active_alert_len_in_sec: 30.0
      owner_left_alert_len_in_sec: 900.0
      mse_liveliness_threshold: 8.0
      avg_active_threshold: 10.0
      avg_halting_threshold: 10.0
      # pipeline related RoIs
      # use the same roi as detection roi
      manager_roi: {
        point: {
          x: 0
          y: 0
        }
        point: {
          x: 1920
          y: 0
        }
        point: {
          x: 1920
          y: 1080
        }
        point: {
          x: 0
          y: 1080
        }
      }
      # Encoder-related configs
      traffic_encoder_kernel: "CAR_REID_ATTENTION_V9_BATCH64_CFV_VEX_VERI_WILDVERI_14JUNE2021_DOUBLE_ITER50000_v205_2_5"
      traffic_encoder_model: "car_attentionnet_reid"
      enable_encoding: false
      max_camera_avg_enc_objs: 2500
      cam_avg_enc_update_sim_th: 0.98
      want_cam_avg_enc: true
      
      # LPR-specific config
      traffic_plate_detection_or_violation_roi_only: true
      # Notification
      traffic_only_send_new_image: false
      traffic_only_notify_vehicle_with_LP: false
      traffic_notify_reporting_interval: true
      traffic_update_image_mode: "plate"
      send_mlops_notifications: false
      # Misc
      save_eval_results: true
      camera_id: 1
      traffic_track_in_parking_zone: false
      setup_base_assets_sleep_insec: 0
      # Trajectory fitting
      want_tracklet_curve_fitting: false
      trajectory_min_points: 5
      trajectory_poly: 3
      curve_fitting_method: "parametric"
      curve_fitting_var: "xyt"
      homography_file: ""
    }
  }
}

node {
  name: "vfilter_node"
  calculator: "ff_vfilter"
  input_stream: "imgStream1080p_aplOut"
  input_stream: "video_stream_info_decode"
  output_stream: "imgStream720p_ffOut"
  output_stream: "video_stream_info_vfilter"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoFilterOptions]: {
      roi_x: 0
      roi_y: 0
      roi_w: 0
      roi_h: 0
      opixfmt: PIXFMT_I420
      ow: 1280
      oh: 720
    }
  }
}

node {
  name: "encode_node"
  calculator: "x86_enc"
  input_stream: "imgStream720p_ffOut"
  input_stream: "video_stream_info_vfilter"
  output_stream: "packetStream2"
  output_stream: "codec_context_stream"
  node_options: {
    [type.googleapis.com/aup.avaf.VideoCodecOptions]: {
     enc: {
       type: MPEG4
       w: 0 
       h: 0
       fps: 0
     }
    }
  }
}

node {
  name: "mux_node"
  calculator: "stream_mux"
  vendor: "Aupera"
  input_stream: "packetStream2"
  input_stream: "codec_context_stream"
  graph_output: "graph_output1"
  node_options: {
    [type.googleapis.com/aup.avaf.StreamMuxOptions]: {
     mux: {
       rtsp_transport: "tcp"
       auto_reconnect: true
     }
    }
  }
}

node {
    name: "notification_web_lpr"
    calculator: "notification_web"
    vendor: "Aupera"
    input_stream: "lpr_notification"
    node_options: {
    [type.googleapis.com/aup.avaf.NotificationWebOptions]: {
        notification_url: "udp://127.0.0.1:60159"
        notification_q_size: 1
        protocol_type: UDP
    }
  }
}
